version: '3'

services:
  articles-management:
    container_name: articles-management
    build:
      context: ./services/articles-management
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - MESSAGE_BUS=amqp://rabbitmq
    links:
      - rabbitmq
  
  events-management:
    container_name: events-management
    build:
      context: ./services/events-management
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - PORT=3000
      - MESSAGE_BUS=amqp://rabbitmq
    links:
      - rabbitmq
  
  user-management:
    container_name: user-management
    build:
      context: ./services/user-management
      dockerfile: Dockerfile
    ports:
      - "3002:3000"
    environment:
      - PORT=3000
      - MESSAGE_BUS=amqp://rabbitmq
    links:
      - rabbitmq
  
  authentication:
    container_name: authentication
    build:
      context: ./services/authentication
      dockerfile: Dockerfile
    ports:
      - "3003:3000"
    environment:
      - PORT=3000
      - MESSAGE_BUS=amqp://rabbitmq
    links:
      - rabbitmq
  
  notification:
    container_name: notification
    build:
      context: ./services/notification
      dockerfile: Dockerfile
    environment:
      - MESSAGE_BUS=amqp://rabbitmq
      - EMAIL_SERVICE=gmail
      - EMAIL_ID=amin@bunnyshell.com
      - EMAIL_PASSWORD=bunnyshell
      - ADMIN_EMAIL=amin@bunnyshell.com
    links:
      - rabbitmq

  frontend:
    container_name: frontend
    build: 
      context: ./services/frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "80:3005"
    environment:
      - PORT=3005

  # mongodb:
  #   image: mongo:latest
  #   ports:
  #     - 27017:27017
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=bunnyshell
  #     - MONGO_INITDB_ROOT_PASSWORD=bunnyshell

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.7.4